// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace PetBooK.DAL.Models;

public partial class PetBookContext : DbContext
{
    public PetBookContext()
    {
    }

    public PetBookContext(DbContextOptions<PetBookContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Breed> Breeds { get; set; }

    public virtual DbSet<Client> Clients { get; set; }

    public virtual DbSet<Clinic> Clinics { get; set; }

    public virtual DbSet<Clinic_Location> Clinic_Locations { get; set; }

    public virtual DbSet<Clinic_Phone> Clinic_Phones { get; set; }

    public virtual DbSet<Doctor> Doctors { get; set; }

    public virtual DbSet<Pet> Pets { get; set; }

    public virtual DbSet<Request_For_Breed> Request_For_Breeds { get; set; }

    public virtual DbSet<Reservation> Reservations { get; set; }

    public virtual DbSet<Reservation_For_Vaccine> Reservation_For_Vaccines { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<Secretary> Secretaries { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<Vaccine> Vaccines { get; set; }

    public virtual DbSet<Vaccine_Clinic> Vaccine_Clinics { get; set; }

    public virtual DbSet<Vaccine_Pet> Vaccine_Pets { get; set; }

    public virtual DbSet<Clinic_Doctor> Clinic_Doctors { get; set; }
    public virtual DbSet<Pet_Breed> Pet_Breeds { get; set; }  

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Breed>(entity =>
        {
            entity.HasKey(e => e.BreedID).HasName("PK__Breed__D1E9AEBDF96649B0");
        });

        modelBuilder.Entity<Client>(entity =>
        {
            entity.HasKey(e => e.ClientID).HasName("PK__Client__E67E1A04A58A9DCC");

            entity.Property(e => e.ClientID).ValueGeneratedNever();

            entity.HasOne(d => d.ClientNavigation).WithOne(p => p.Client)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Client_User");
        });

        modelBuilder.Entity<Clinic>(entity =>
        {
            entity.HasKey(e => e.ClinicID).HasName("PK__Clinic__3347C2FD592461AC");

        });


        modelBuilder.Entity<Clinic_Doctor>(entity =>
        {
            entity.ToTable("Clinic_Doctor"); // Ensure this matches the actual table name

            entity.HasKey(cd => new { cd.ClinicID, cd.DoctorID });

            entity.HasOne(cd => cd.clinic)
                  .WithMany(c => c.Clinic_Doctors)
                  .HasForeignKey(cd => cd.ClinicID)
                  .OnDelete(DeleteBehavior.ClientSetNull);

            entity.HasOne(cd => cd.doctor)
                  .WithMany(d => d.Clinic_Doctors)
                  .HasForeignKey(cd => cd.DoctorID)
                  .OnDelete(DeleteBehavior.ClientSetNull);
        });


        modelBuilder.Entity<Clinic_Location>(entity =>
        {
            entity.HasKey(e => new { e.ClinicID, e.Location }).HasName("PK__Clinic_L__3D12114C6F88D407");

            entity.HasOne(d => d.Clinic).WithMany(p => p.Clinic_Locations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Clinic_Lo__Clini__5070F446");
        });

        modelBuilder.Entity<Clinic_Phone>(entity =>
        {
            entity.HasKey(e => new { e.ClinicID, e.Phone }).HasName("PK__Clinic_P__D68021A44C70A49E");

            entity.HasOne(d => d.Clinic).WithMany(p => p.Clinic_Phones)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Clinic_Ph__Clini__534D60F1");
        });

        modelBuilder.Entity<Doctor>(entity =>
        {
            entity.HasKey(e => e.DoctorID).HasName("PK__Doctor__2DC00EDFF8A0D26B");

            entity.Property(e => e.DoctorID).ValueGeneratedNever();

            entity.Property(e => e.Degree)
                  .IsRequired()
                  .HasMaxLength(255)
                  .IsUnicode(false);

            entity.Property(e => e.Salary)
                  .HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.DoctorNavigation)
                  .WithOne(p => p.Doctor)
                  .HasForeignKey<Doctor>(d => d.DoctorID)
                  .OnDelete(DeleteBehavior.ClientSetNull)
                  .HasConstraintName("FK_Doctor_User");
        });



        modelBuilder.Entity<Pet>(entity =>
        {
            entity.HasKey(e => e.PetID).HasName("PK__Pet__48E53802A6364FE7");

            entity.Property(e => e.IDNoteBookImage).HasDefaultValue("");
            entity.Property(e => e.Sex).IsFixedLength();

            entity.HasOne(d => d.User).WithMany(p => p.Pets)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Pet_Client");
        });

        //    entity.HasMany(d => d.Breeds).WithMany(p => p.Pets)
        //        .UsingEntity<Pet_Breed>(
        //            j => j
        //                .HasOne(pb => pb.Breed)
        //                .WithMany(b => b.Pet_Breeds)
        //                .HasForeignKey(pb => pb.BreedID)
        //                .OnDelete(DeleteBehavior.ClientSetNull),
        //            j => j
        //                .HasOne(pb => pb.Pet)
        //                .WithMany(p => p.Pet_Breeds)
        //                .HasForeignKey(pb => pb.PetID)
        //                .OnDelete(DeleteBehavior.ClientSetNull),
        //            j =>
        //            {
        //                j.HasKey(t => new { t.PetID, t.BreedID });
        //                j.ToTable("Pet_Breed");
        //            });
        //});


        modelBuilder.Entity<Pet_Breed>(entity =>
        {
            entity.ToTable("Pet_Breed"); // Ensure this matches the actual table name
            entity.HasKey(pb => new { pb.PetID, pb.BreedID });

            entity.HasOne(pb => pb.Pet)
                .WithMany(p => p.Pet_Breeds)
                .HasForeignKey(pb => pb.PetID);

            entity.HasOne(pb => pb.Breed)
                .WithMany(b => b.Pet_Breeds)
                .HasForeignKey(pb => pb.BreedID);
        });


        modelBuilder.Entity<Request_For_Breed>(entity =>
        {
            entity.HasKey(e => new { e.PetIDSender, e.PetIDReceiver }).HasName("PK__Request___24FFBCB038B339CB");

            entity.HasOne(d => d.PetIDReceiverNavigation).WithMany(p => p.Request_For_BreedPetIDReceiverNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Request_F__PetID__73BA3083");

            entity.HasOne(d => d.PetIDSenderNavigation).WithMany(p => p.Request_For_BreedPetIDSenderNavigations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Request_F__PetID__72C60C4A");
        });

        modelBuilder.Entity<Reservation>(entity =>
        {
            entity.HasKey(e => new { e.PetID, e.ClinicID }).HasName("PK__Reservat__8BD1442D2F5722B7");

            entity.HasOne(d => d.Clinic).WithMany(p => p.Reservations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Reservati__Clini__619B8048");

            entity.HasOne(d => d.Pet).WithMany(p => p.Reservations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Reservati__PetID__60A75C0F");
        });

        modelBuilder.Entity<Reservation_For_Vaccine>(entity =>
        {
            entity.HasKey(e => new { e.PetID, e.ClinicID, e.VaccineID, e.Date }).HasName("PK__Reservat__B3E3EBC2F1908FAA");

            entity.HasOne(d => d.Clinic).WithMany(p => p.Reservation_For_Vaccines)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Reservati__Clini__6EF57B66");

            entity.HasOne(d => d.Pet).WithMany(p => p.Reservation_For_Vaccines)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Reservati__PetID__6E01572D");

            entity.HasOne(d => d.Vaccine).WithMany(p => p.Reservation_For_Vaccines)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Reservati__Vacci__6FE99F9F");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.RoleID).HasName("PK__Role__8AFACE3A0DA3D544");
        });

        modelBuilder.Entity<Secretary>(entity =>
        {
            entity.HasKey(e => e.SecretaryID).HasName("PK__Secretar__5359F0736033F778");

            entity.Property(e => e.SecretaryID).ValueGeneratedNever();

            entity.HasOne(d => d.Clinic).WithOne(p => p.Secretary).HasConstraintName("FK_Secretary_Clinic");

            entity.HasOne(d => d.SecretaryNavigation).WithOne(p => p.Secretary)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Secretary_User");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserID).HasName("PK__User__1788CCACF276BEC5");

            entity.Property(e => e.Sex).IsFixedLength();

            entity.HasOne(d => d.Role).WithMany(p => p.Users).HasConstraintName("FK_RoleID");
        });

        modelBuilder.Entity<Vaccine>(entity =>
        {
            entity.HasKey(e => e.VaccineID).HasName("PK__Vaccine__45DC68E9C92D0168");
        });

        modelBuilder.Entity<Vaccine_Clinic>(entity =>
        {
            entity.HasKey(e => new { e.VaccineID, e.ClinicID }).HasName("PK__Vaccine___86E814C606EC460B");

            entity.HasOne(d => d.Clinic).WithMany(p => p.Vaccine_Clinics)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Vaccine_C__Clini__6B24EA82");

            entity.HasOne(d => d.Vaccine).WithMany(p => p.Vaccine_Clinics)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Vaccine_C__Vacci__6A30C649");
        });

        modelBuilder.Entity<Vaccine_Pet>(entity =>
        {
            entity.HasKey(e => new { e.VaccineID, e.PetID }).HasName("PK__Vaccine___71523B69C99356C5");

            entity.HasOne(d => d.Pet).WithMany(p => p.Vaccine_Pets)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Vaccine_P__PetID__6754599E");

            entity.HasOne(d => d.Vaccine).WithMany(p => p.Vaccine_Pets)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Vaccine_P__Vacci__66603565");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}